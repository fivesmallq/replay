defaultTasks 'clean', 'test', 'jar', 'uploadArchives'

ext {
  REPO = project.properties['repo'] ?: "${rootDir}/repo"
}

subprojects {

  group='com.codeborne.replay'
  version='1.6-SNAPSHOT'

  apply plugin: 'java'
  apply plugin: 'maven'

  [compileJava, compileTestJava]*.options.collect {options -> options.encoding = 'UTF-8'}
  [compileJava, compileTestJava]*.options.collect {options -> options.debug = true}
  compileJava.options.debugOptions.debugLevel = "source,lines,vars"
  sourceCompatibility = 1.8
  targetCompatibility = 1.8

  repositories {
    jcenter()
    mavenCentral()
  }

  sourceSets {
    main {
      java {srcDir 'src'}
      resources {srcDir 'src'}
    }
    test {
      java {srcDir 'test'}
      resources {srcDir 'test'}
    }
  }

  configurations {
    libProd
    libTest
    compile.extendsFrom(libProd)
    testCompile.extendsFrom(libTest)
  }

  task libsProd(type: Sync) {
    from configurations.libProd
    into "${rootDir}/build/lib"
    preserve {include '*'}
  }

  task libsTest(type: Sync) {
    from configurations.libTest
    into "${rootDir}/build/lib-test"
    preserve {include '*'}
  }

  compileJava.finalizedBy libsProd, libsTest

  clean.doFirst {
    new File("${rootDir}/build/lib").deleteDir()
    new File("${rootDir}/build/lib-test").deleteDir()
  }

  test {
    include 'play/**/*'
    systemProperties['file.encoding'] = 'UTF-8'
  }

  jar {
    manifest {
      attributes(
        "Implementation-Title": project.group + '.' + project.name,
        "Implementation-Version": version,
        "Implementation-Vendor": "Codeborne")
    }
  }

  task sourcesJar(type: Jar, dependsOn:classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
  }

  artifacts {
    archives jar
    archives sourcesJar
  }

  uploadArchives {
    repositories {
      mavenDeployer {
        repository(url: "file://${REPO}")
      }
    }
  }
}